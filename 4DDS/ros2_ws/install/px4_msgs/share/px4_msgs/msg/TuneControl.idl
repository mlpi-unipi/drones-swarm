// generated from rosidl_adapter/resource/msg.idl.em
// with input from px4_msgs/msg/TuneControl.msg
// generated code does not contain a copyright notice


module px4_msgs {
  module msg {
    module TuneControl_Constants {
      const uint8 TUNE_ID_STOP = 0;
      const uint8 TUNE_ID_STARTUP = 1;
      const uint8 TUNE_ID_ERROR = 2;
      const uint8 TUNE_ID_NOTIFY_POSITIVE = 3;
      const uint8 TUNE_ID_NOTIFY_NEUTRAL = 4;
      const uint8 TUNE_ID_NOTIFY_NEGATIVE = 5;
      const uint8 TUNE_ID_ARMING_WARNING = 6;
      const uint8 TUNE_ID_BATTERY_WARNING_SLOW = 7;
      const uint8 TUNE_ID_BATTERY_WARNING_FAST = 8;
      const uint8 TUNE_ID_GPS_WARNING = 9;
      const uint8 TUNE_ID_ARMING_FAILURE = 10;
      const uint8 TUNE_ID_PARACHUTE_RELEASE = 11;
      const uint8 TUNE_ID_SINGLE_BEEP = 12;
      const uint8 TUNE_ID_HOME_SET = 13;
      const uint8 TUNE_ID_SD_INIT = 14;
      const uint8 TUNE_ID_SD_ERROR = 15;
      const uint8 TUNE_ID_PROG_PX4IO = 16;
      const uint8 TUNE_ID_PROG_PX4IO_OK = 17;
      const uint8 TUNE_ID_PROG_PX4IO_ERR = 18;
      const uint8 TUNE_ID_POWER_OFF = 19;
      const uint8 NUMBER_OF_TUNES = 20;
      const uint8 VOLUME_LEVEL_MIN = 0;
      const uint8 VOLUME_LEVEL_DEFAULT = 20;
      const uint8 VOLUME_LEVEL_MAX = 100;
      const uint8 ORB_QUEUE_LENGTH = 4;
    };
    @verbatim (language="comment", text=
      "This message is used to control the tunes, when the tune_id is set to CUSTOM" "\n"
      "then the frequency, duration are used otherwise those values are ignored.")
    struct TuneControl {
      @verbatim (language="comment", text=
        "time since system start (microseconds)")
      uint64 timestamp;

      @verbatim (language="comment", text=
        "tune_id corresponding to TuneID::* from the tune_defaults.h in the tunes library")
      uint8 tune_id;

      @verbatim (language="comment", text=
        "if true the tune which is playing will be stopped and the new started")
      boolean tune_override;

      @verbatim (language="comment", text=
        "in Hz")
      uint16 frequency;

      @verbatim (language="comment", text=
        "in us")
      uint32 duration;

      @verbatim (language="comment", text=
        "in us")
      uint32 silence;

      @verbatim (language="comment", text=
        "value between 0-100 if supported by backend")
      uint8 volume;
    };
  };
};
