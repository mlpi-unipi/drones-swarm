// generated from rosidl_adapter/resource/msg.idl.em
// with input from px4_msgs/msg/AirspeedValidated.msg
// generated code does not contain a copyright notice


module px4_msgs {
  module msg {
    struct AirspeedValidated {
      @verbatim (language="comment", text=
        "time since system start (microseconds)")
      uint64 timestamp;

      @verbatim (language="comment", text=
        "indicated airspeed in m/s (IAS), set to NAN if invalid")
      float indicated_airspeed_m_s;

      @verbatim (language="comment", text=
        "calibrated airspeed in m/s (CAS, accounts for instrumentation errors), set to NAN if invalid")
      float calibrated_airspeed_m_s;

      @verbatim (language="comment", text=
        "true filtered airspeed in m/s (TAS), set to NAN if invalid")
      float true_airspeed_m_s;

      @verbatim (language="comment", text=
        "CAS calculated from groundspeed - windspeed, where windspeed is estimated based on a zero-sideslip assumption, set to NAN if invalid")
      float calibrated_ground_minus_wind_m_s;

      @verbatim (language="comment", text=
        "TAS calculated from groundspeed - windspeed, where windspeed is estimated based on a zero-sideslip assumption, set to NAN if invalid")
      float true_ground_minus_wind_m_s;

      @verbatim (language="comment", text=
        "True if data from at least one airspeed sensor is declared valid.")
      boolean airspeed_sensor_measurement_valid;

      @verbatim (language="comment", text=
        "1-3: airspeed sensor index, 0: groundspeed-windspeed, -1: airspeed invalid")
      int8 selected_airspeed_index;
    };
  };
};
