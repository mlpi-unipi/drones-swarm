// generated from rosidl_adapter/resource/srv.idl.em
// with input from gazebo_msgs/srv/GetJointProperties.srv
// generated code does not contain a copyright notice


module gazebo_msgs {
  module srv {
    struct GetJointProperties_Request {
      @verbatim (language="comment", text=
        "Scoped name of joint")
      string joint_name;
    };
    module GetJointProperties_Response_Constants {
      @verbatim (language="comment", text=
        "single DOF")
      const uint8 REVOLUTE = 0;
      @verbatim (language="comment", text=
        "single DOF (revolute w/o limits)")
      const uint8 CONTINUOUS = 1;
      @verbatim (language="comment", text=
        "single DOF")
      const uint8 PRISMATIC = 2;
      @verbatim (language="comment", text=
        "0 DOF")
      const uint8 FIXED = 3;
      @verbatim (language="comment", text=
        "3 DOF movement, 0 DOF control")
      const uint8 BALL = 4;
      @verbatim (language="comment", text=
        "2 DOF")
      const uint8 UNIVERSAL = 5;
    };
    @verbatim (language="comment", text=
      "joint type")
    struct GetJointProperties_Response {
      uint8 type;

      @verbatim (language="comment", text=
        "dynamics properties")
      sequence<double> damping;

      @verbatim (language="comment", text=
        "joint state")
      sequence<double> position;

      @verbatim (language="comment", text=
        "TODO(chapulina) Rename to velocity")
      sequence<double> rate;

      @verbatim (language="comment", text=
        "service return status" "\n"
        "return true if get successful")
      boolean success;

      @verbatim (language="comment", text=
        "comments if available")
      string status_message;
    };
  };
};
